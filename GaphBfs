from collections import deque


def isValidPath(row, col, visited, n):
    if 0 <= row < n and 0 <= col < n and visited[row][col] == 0:
        return True
    return False


def bfs(row, col, visited, n, mat, dirs):
    que = deque()
    que.append((row, col))
    visited[row][col] = 1

    while que:
        x, y = que.popleft()
        print(mat[x][y], end=" ")

        for dx, dy in dirs:
            new_x, new_y = x + dx, y + dy
            if isValidPath(new_x, new_y, visited, n):
                que.append((new_x, new_y))
                visited[new_x][new_y] = 1

